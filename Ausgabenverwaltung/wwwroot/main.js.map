{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/ausgaben-auswertungen/ausgaben-kreisdiagramme/ausgaben-kreisdiagramme.component.css","webpack:///./src/app/ausgaben-auswertungen/ausgaben-kreisdiagramme/ausgaben-kreisdiagramme.component.html","webpack:///./src/app/ausgaben-auswertungen/ausgaben-kreisdiagramme/ausgaben-kreisdiagramme.component.ts","webpack:///./src/app/ausgaben-auswertungen/ausgaben-verlauf/ausgaben-auswertungen.component.html","webpack:///./src/app/ausgaben-auswertungen/ausgaben-verlauf/ausgaben-auswertungen.component.ts","webpack:///./src/app/ausgaben/ausgaben-input/ausgaben-input.component.html","webpack:///./src/app/ausgaben/ausgaben-input/ausgaben-input.component.ts","webpack:///./src/app/ausgaben/ausgaben-list/ausgaben-list.component.html","webpack:///./src/app/ausgaben/ausgaben-list/ausgaben-list.component.ts","webpack:///./src/app/ausgaben/ausgaben.component.html","webpack:///./src/app/ausgaben/ausgaben.component.ts","webpack:///./src/app/shared/ausgaben.model.ts","webpack:///./src/app/shared/ausgaben.service.ts","webpack:///./src/app/shared/enums/chart-colors-user.enum.ts","webpack:///./src/app/shared/enums/chart-colors.shop.enum.ts","webpack:///./src/app/shared/month-picker/month-picker.component.css","webpack:///./src/app/shared/month-picker/month-picker.component.html","webpack:///./src/app/shared/month-picker/month-picker.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<h3 style=\\\"margin-top: 10px!important;\\\">\\r\\n  Ausgabenverwaltung\\r\\n</h3>\\r\\n<mat-tab-group>\\r\\n  <mat-tab label=\\\"Erfassung\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <app-ausgaben [selYear]=\\\"selectedYear\\\" [selMonth]=\\\"selectedMonth\\\"  (selYearChanged)=\\\"getYearUpdate($event)\\\" \\r\\n      (selMonthChanged)=\\\"getMonthUpdate($event)\\\" >\\r\\n      </app-ausgaben>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Auswertungen\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <mat-tab-group>            \\r\\n        <mat-tab *ngFor=\\\"let tab of prefTabs\\\" label=\\\"{{tab.label}}\\\">\\r\\n          <div *ngIf=\\\"tab.label === 'Ausgabenverläufe'\\\">\\r\\n            <app-ausgaben-auswertungen [selYear]=\\\"selectedYear\\\" [selMonth]=\\\"selectedMonth\\\" (selYearChanged)=\\\"getYearUpdate($event)\\\" (selMonthChanged)=\\\"getMonthUpdate($event)\\\">lädt...</app-ausgaben-auswertungen>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"tab.label === 'Weitere Statistiken'\\\">\\r\\n            <app-ausgaben-kreisdiagramme [selYear]=\\\"selectedYear\\\" [selMonth]=\\\"selectedMonth\\\" (selYearChanged)=\\\"getYearUpdate($event)\\\" (selMonthChanged)=\\\"getMonthUpdate($event)\\\">lädt...</app-ausgaben-kreisdiagramme>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\\r\\n\"","import { Component, OnInit, OnChanges } from '@angular/core';\r\nimport { ChartColorsUser } from './shared/enums/chart-colors-user.enum';\r\nimport { AusgabenService } from './shared/ausgaben.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Ausgaben } from './shared/ausgaben.model';\r\nimport { AusgabenTypSet } from './shared/interfaces/ausgabentyp-set';\r\nimport { UserSet } from './shared/interfaces/user-set';\r\nimport { ShopSet } from './shared/interfaces/shop-set';\r\nimport { ChartColorsShops } from './shared/enums/chart-colors.shop.enum';\r\n\r\nenum ChartColorsAusgabenTypen {\r\n  \"grey\",\r\n  \"green\",\r\n  \"yellow\",\r\n  \"blue\",\r\n  \"red\",\r\n  \"orange\"\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styles: []\r\n})\r\n\r\nexport class AppComponent implements OnInit, OnChanges {\r\n  \r\n  \r\n  title = 'Ausgaben-Client';\r\n  selectedYear:number;\r\n  selectedMonth:number;\r\n  allAusgaben: Observable<Ausgaben[]>;\r\n\r\n  allAusgabenTypen: AusgabenTypSet[];\r\n  ausgabenTypenNames: string[];\r\n  ausgabenTypColors: string[];\r\n  \r\n  allUsers: UserSet[];\r\n  userNames: string[];\r\n  userColors: string[];\r\n\r\n  allShops: ShopSet[];\r\n  shopNames: string[];\r\n  shopColors: string[];\r\n\r\n \r\n  prefTabs = [\r\n    {label: 'Ausgabenverläufe', content: 'Ausgabenverläufe'},\r\n    {label: 'Weitere Statistiken', content: 'Weitere Stats'}\r\n  \r\n  ];\r\n \r\n    constructor(private service: AusgabenService) {\r\n    }\r\n\r\n    ngOnInit(){\r\n      console.log('app.component OnInit');\r\n      this.selectedYear = new Date().getFullYear();\r\n      this.selectedMonth = new Date().getMonth() + 1; // getMonth() is 0-based\r\n      this.allUsers=[];\r\n      this.allAusgabenTypen=[];\r\n      this.allShops=[];\r\n\r\n      // Dropdowns in input form\r\n      this.getUsers();\r\n      this.getAusgabenTypen();\r\n      this.getShops();\r\n\r\n      // expenses list, evaluations (Auswertungen)\r\n      this.getAusgaben();\r\n      \r\n    }\r\n\r\n    ngOnChanges(){\r\n      console.log('app.component OnChanges');\r\n      this.getAusgaben();\r\n    }\r\n\r\n\r\n  getAusgaben(){\r\n      this.allAusgaben= this.service.getAllAusgaben(this.selectedYear, this.selectedMonth);\r\n    }\r\n\r\n  getAusgabenTypen(){\r\n    this.service.getAllAusgabenTypen().subscribe(\r\n      data => {\r\n        let colorIndex = 0;\r\n          data.forEach(at=>{\r\n          this.allAusgabenTypen.push({AusgabenTypId:at.AusgabenTypId, Name:at.Name, Color:ChartColorsAusgabenTypen[colorIndex]});\r\n          colorIndex++;\r\n        });\r\n\r\n        this.ausgabenTypenNames=this.allAusgabenTypen.map(at=>at.Name)\r\n        this.ausgabenTypColors = this.allAusgabenTypen.map(at => at.Color);\r\n        console.log('AusgabenTypColors:');\r\n        console.log(this.ausgabenTypColors);\r\n        console.log('AusgabentypNames:');\r\n        console.log(this.ausgabenTypenNames);\r\n      }  \r\n    );\r\n  }\r\n\r\n  getUsers(){\r\n    this.service.getAllUsers().subscribe(\r\n      data => {\r\n          let colorIndex = 0;\r\n          data.forEach(b=>{\r\n            this.allUsers.push({UserId:b.UserId, Name:b.Name, Color:ChartColorsUser[colorIndex]});\r\n            colorIndex++;\r\n          });\r\n\r\n          this.userNames =this.allUsers.map(u=>u.Name)\r\n          console.log('Users:');\r\n          console.log(this.allUsers);\r\n\r\n          this.userColors=this.allUsers.map(u => u.Color);\r\n          console.log('UserColors:');\r\n          console.log(this.userColors);\r\n          console.log('UserNames:');\r\n          console.log(this.userNames);\r\n        }  \r\n      );\r\n  }\r\n\r\n  getShops(){\r\n    this.service.getAllShops().subscribe(\r\n      data => {\r\n          let colorIndex = 0;\r\n          data.forEach(s=>{\r\n            this.allShops.push({ShopId:s.ShopId, Name:s.Name, Color:ChartColorsShops[colorIndex]});\r\n            colorIndex++;\r\n          });\r\n\r\n          this.shopNames =this.allShops.map(s=>s.Name)\r\n          console.log('Shops:');\r\n          console.log(this.allShops);\r\n\r\n          this.shopColors=this.allShops.map(u => u.Color);\r\n          console.log('ShopColors:');\r\n          console.log(this.shopColors);\r\n          console.log('ShopNames:');\r\n          console.log(this.shopNames);\r\n        }  \r\n      );\r\n  }\r\n\r\n  // fügt \"0\"-en vor übergebene Zahl, bis \"size\" erreicht ist:\r\n  //Bsp: number=9, size=2: ==> \"09\"\r\n  pad(num:number, size:number): string {\r\n    let s = num + '';\r\n    while (s.length < size) {\r\n      s = '0' + s;\r\n    }\r\n\r\n    return s;\r\n  }\r\n\r\n\r\n  // TODO: bisher nicht genutzt ==> Aggregation\r\n  groupBy(list:number[], keyGetter) {\r\n    const map = new Map();\r\n    list.forEach((item) => {\r\n      const key = keyGetter(item);\r\n      const collection = map.get(key);\r\n      \r\n      if (!collection) {\r\n          map.set(key, [item]);\r\n      } \r\n      else {\r\n          collection.push(item);\r\n      }\r\n    });\r\n    \r\n    return map;\r\n  }\r\n\r\n  getYearUpdate(selected: number){\r\n    // console.log('gewähltes Jahr (app.component):' + selected);\r\n    this.selectedYear=selected;\r\n    this.getAusgaben();\r\n  }\r\n\r\n  getMonthUpdate(selected: number){\r\n  //  console.log('gewählter Monat (app.component):' + selected);\r\n    this.selectedMonth=selected;\r\n    this.getAusgaben();\r\n  }\r\n}\r\n\r\nexport namespace AppComponent {\r\n  export enum ChartColors {\r\n    red = \"red\",\r\n    blue = \"blue\",\r\n    green = \"green\",\r\n    yellow = \"yellow\",\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport localeDe from '@angular/common/locales/de';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {  \r\n  MatButtonModule, MatMenuModule, MatDatepickerModule,MatNativeDateModule , MatIconModule, MatCardModule, MatSidenavModule,MatFormFieldModule,  \r\n  MatInputModule, MatTooltipModule, MatToolbarModule, MatTableModule, MatSortModule, MatPaginatorModule, MatSpinner,\r\n  MatProgressSpinnerModule, MatTabsModule, MAT_DATE_LOCALE  \r\n} from '@angular/material';\r\n\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { AusgabenComponent } from './ausgaben/ausgaben.component';\r\nimport { AusgabenInputComponent } from './ausgaben/ausgaben-input/ausgaben-input.component';\r\nimport { AusgabenService } from './shared/ausgaben.service';\r\nimport { AusgabenListComponent } from './ausgaben/ausgaben-list/ausgaben-list.component';\r\nimport { AusgabenAuswertungenComponent } from './ausgaben-auswertungen/ausgaben-verlauf/ausgaben-auswertungen.component';\r\nimport { AusgabenKreisdiagrammeComponent } from './ausgaben-auswertungen/ausgaben-kreisdiagramme/ausgaben-kreisdiagramme.component';\r\nimport {DatepickerViewsSelection} from 'src/app/shared/month-picker/month-picker.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AusgabenComponent,\r\n    AusgabenInputComponent,\r\n    AusgabenListComponent,\r\n    AusgabenAuswertungenComponent,\r\n    AusgabenKreisdiagrammeComponent,\r\n    DatepickerViewsSelection\r\n\r\n       \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,  \r\n    MatMenuModule,  \r\n    MatDatepickerModule,  \r\n    MatNativeDateModule,  \r\n    MatIconModule,  \r\n    MatCardModule,  \r\n    MatSidenavModule,  \r\n    MatFormFieldModule,  \r\n    MatInputModule,  \r\n    MatTooltipModule,  \r\n    MatToolbarModule,\r\n    MatSelectModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatProgressSpinnerModule,\r\n    MatTabsModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [AusgabenService, { provide: LOCALE_ID, useValue: 'de' }, { provide: MAT_DATE_LOCALE, useValue: 'de-DE' }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n  constructor() {\r\n    registerLocaleData(localeDe);\r\n  }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1c2dhYmVuLWF1c3dlcnR1bmdlbi9hdXNnYWJlbi1rcmVpc2RpYWdyYW1tZS9hdXNnYWJlbi1rcmVpc2RpYWdyYW1tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"ausgaben-main-container\\\">\\r\\n\\r\\n    \\r\\n  <div class=\\\"row\\\">\\r\\n     <div class=\\\"col-md-12\\\">\\r\\n      <app-month-picker  [selYear]=\\\"selYear\\\" [selMonth]=\\\"selMonth\\\" (selYearChanged)=\\\"getYearUpdate($event)\\\" (selMonthChanged)=\\\"getMonthUpdate($event)\\\" ></app-month-picker>\\r\\n    </div>\\r\\n  </div>\\r\\n  <hr>\\r\\n  \\r\\n  <!-- wichtig:div um canvas -->\\r\\n  <mat-card *ngIf=\\\"!resourcesLoaded\\\" \\r\\n   style=\\\"display: flex; justify-content: center; align-items: center\\\">\\r\\n  <mat-progress-spinner \\r\\n    color=\\\"primary\\\" \\r\\n    mode=\\\"indeterminate\\\">\\r\\n  </mat-progress-spinner>\\r\\n  </mat-card>\\r\\n  \\r\\n  <div *ngIf=\\\"!existBetraege && resourcesLoaded\\\">\\r\\n    keine Ausgaben im {{monthName}} {{selectedYear}} erfasst\\r\\n  </div>\\r\\n  <div [ngClass]=\\\"existBetraege?'shown':'hidden'\\\" >\\r\\n  <div  class=\\\"row\\\">\\r\\n    <div   class=\\\"col-md-6\\\">\\r\\n      <canvas #pieChartRatioUsers >{{pieChartRatioUsers}}</canvas>\\r\\n    </div>\\r\\n    <div  class=\\\"col-md-6\\\">\\r\\n      <canvas #pieChartRatioAusgabenTyp >{{pieChartRatioAusgabenTyp}}</canvas>\\r\\n    </div>  \\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild, Input, OnChanges, Output, EventEmitter } from '@angular/core';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { AusgabenService } from 'src/app/shared/ausgaben.service';\r\n\r\nimport * as Rx from 'rxjs/Rx';\r\nimport * as Chart from 'chart.js';\r\nimport * as _ from 'lodash';\r\nimport { BetragsSet } from 'src/app/shared/interfaces/betrags-set';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-ausgaben-kreisdiagramme',\r\n  templateUrl: './ausgaben-kreisdiagramme.component.html',\r\n  styleUrls: ['./ausgaben-kreisdiagramme.component.css']\r\n})\r\nexport class AusgabenKreisdiagrammeComponent implements OnInit, OnChanges {\r\n  ausgabenArrayUsers: BetragsSet[];\r\n  ausgabenArrayAusgabenTyp: BetragsSet[];\r\n  selectedYear:number;\r\n  monthName:string;\r\n  betraege:number[];\r\n  existBetraege=true;\r\n  groupedbetraege=[]; //TODO: bisher keine Gruppierung\r\n  ausgabenTypenNames:string[];\r\n  resourcesLoaded=false;\r\n  isRefreshMode=false;\r\n\r\n  chartDataPerUser = {\r\n    data: [],\r\n    backgroundColor: [],\r\n    labels:this.baseComponent.userNames\r\n  };\r\n\r\n  chartDataPerAusgabenTyp = {\r\n    data: [],\r\n    backgroundColor: [],\r\n    labels:this.ausgabenTypenNames\r\n  };\r\n \r\n \r\n  @Input() selYear: number; \r\n  @Input() selMonth: number; \r\n  @Output() selYearChanged =  new EventEmitter<number>();\r\n  @Output() selMonthChanged = new EventEmitter<number>();\r\n\r\n  @ViewChild('pieChartRatioUsers') private chartRefPerUsers;\r\n  @ViewChild('pieChartRatioAusgabenTyp') private chartRefPerAusgabenTyp;\r\n\r\n  pieChartRatioUsers : Chart;\r\n  pieChartRatioAusgabenTyp: Chart;\r\n \r\n  chartOptions = {\r\n    legend: {\r\n      display: true,\r\n      position: 'top',\r\n      labels: {\r\n        boxWidth: 80,\r\n        fontColor: 'black'\r\n      }\r\n    }\r\n  };\r\n\r\n  constructor(private service: AusgabenService,\r\n    private baseComponent:AppComponent) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.monthName=this.service.getMonthName(this.selMonth);\r\n    // this.getchartDataPerUser(this.selMonth);\r\n  }\r\n\r\n  ngOnChanges(){\r\n    this.resourcesLoaded=false;\r\n    this.monthName=this.service.getMonthName(this.selMonth);\r\n    console.log('Auswertungen Stat: ngOnChanges:' + this.monthName);\r\n    this.getchartDataPerUser();\r\n    setTimeout(()=>{\r\n    this.getchartDataPerAusgabenTyp();\r\n  },100);\r\n    \r\n    if(this.isRefreshMode){\r\n      console.log('rerender');\r\n      if(this.pieChartRatioUsers){\r\n        console.log('pieChartRatioUsers');\r\n        this.pieChartRatioUsers.update();\r\n        console.log(this.pieChartRatioUsers);\r\n      }\r\n\r\n      if(this.pieChartRatioAusgabenTyp){\r\n        console.log('pieChartRatioAusgabenTyp');\r\n        this.pieChartRatioAusgabenTyp.update();\r\n        console.log(this.pieChartRatioAusgabenTyp);\r\n      }\r\n    }\r\n  }\r\n\r\n  getchartDataPerUser(){\r\n    this.ausgabenArrayUsers=[];\r\n    this.betraege=[];\r\n     // setTimeout(()=>{\r\n    this.baseComponent.allAusgaben.subscribe(\r\n      data => {\r\n        data.forEach(b=>{\r\n          this.ausgabenArrayUsers.push({tag:'', betrag:b.Betrag, einkaeuferId:b.UserId, ausgabenTyp:'0'});\r\n         });\r\n\r\n          // Gruppierung nach Einkäufer\r\n        let groupedData: any = [];\r\n        Rx.Observable.from(this.ausgabenArrayUsers)\r\n        .groupBy(x => x.einkaeuferId) // using groupBy from Rxjs\r\n        .flatMap(group => group.toArray())// GroupBy dont create a array object so you have to flat it\r\n        .map(g => {// mapping \r\n          return {\r\n            einkaeuferId: g[0].einkaeuferId,//take the first name because we grouped them by name\r\n            betrag: _.sumBy(g, 'betrag'), // using lodash to sum quantity\r\n          }\r\n        })\r\n        .toArray() //.toArray because I guess you want to loop on it with ngFor      \r\n        // .do(sum => console.log('sum: Einkäufer', sum)) // just for debug\r\n        .subscribe(d => groupedData = d); \r\n        groupedData= groupedData.sort((a, b) => (a.einkaeuferId > b.einkaeuferId) ? 1 : -1);\r\n        // console.log('alle erfassten Ausgaben (getchartDataPerUser):');\r\n        // console.log(groupedData);\r\n    \r\n        let groupedDataErgaenzt=[];\r\n      \r\n        for(var einkaeuferId:number = 1; einkaeuferId<=this.baseComponent.userNames.length; einkaeuferId++){\r\n          var found=groupedData.find(f=>f.einkaeuferId===einkaeuferId);\r\n          if(!found){\r\n            groupedDataErgaenzt.push({betrag:0, einkaeuferId: einkaeuferId});\r\n          }\r\n          else{\r\n            groupedDataErgaenzt.push({betrag:found.betrag, einkaeuferId: found.einkaeuferId});\r\n          }\r\n        }\r\n\r\n        // console.log('groupedDataErgaenzt');\r\n        // console.log(groupedDataErgaenzt) ;\r\n        this.betraege = groupedDataErgaenzt.map(b=>b.betrag.toFixed(2));\r\n        // console.log('betr: Einkäufer');\r\n        // console.log(this.betraege);\r\n        \r\n\r\n        this.chartDataPerUser.backgroundColor=this.baseComponent.userColors;\r\n        this.chartDataPerUser.data=this.betraege;\r\n        this.chartDataPerUser.labels=this.baseComponent.userNames;\r\n        let positiveBetraege=this.betraege.find(f=>f>0);\r\n        console.log('positiveBetraege (chartDataPerUser)');\r\n        console.log(positiveBetraege);\r\n        this.existBetraege=false;\r\n        if(positiveBetraege>0)\r\n          this.existBetraege=true;\r\n      }\r\n    );\r\n      // },100);\r\n  \r\n    console.log('existBetraege (stat-Users');\r\n    console.log(this.existBetraege);\r\n    if(this.pieChartRatioUsers){\r\n  //  console.log(this.pieChartRatioUsers.canvas.getContext('2d'));\r\n      console.log('destroy pieChartRatioUsers');\r\n      this.pieChartRatioUsers.destroy();\r\n    }\r\n    this.pieChartRatioUsers = new Chart(this.chartRefPerUsers.nativeElement,{\r\n      type: 'pie',\r\n      data: {\r\n        labels:this.baseComponent.userNames,\r\n        datasets:[this.chartDataPerUser],\r\n        \r\n      },\r\n      options: {\r\n        title: {\r\n          display: true,\r\n          text: 'Anteile an den Einkäufen'\r\n        },\r\n      legend: {\r\n          display: true,\r\n          position: 'top',\r\n          labels: {\r\n            boxWidth: 80,\r\n            fontColor: 'black'\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n  getchartDataPerAusgabenTyp(){\r\n  \r\n    this.ausgabenArrayAusgabenTyp=[];\r\n    this.betraege=[];\r\n   \r\n    \r\n    \r\n   \r\n    this.baseComponent.allAusgaben.subscribe(\r\n      data => {\r\n        data.forEach(b=>{\r\n          this.ausgabenArrayAusgabenTyp.push({tag:'', betrag:b.Betrag, einkaeuferId:0,ausgabenTyp:b.AusgabenTypId});\r\n          this.existBetraege=true;\r\n        });\r\n    \r\n        this.ausgabenArrayAusgabenTyp=this.ausgabenArrayAusgabenTyp.sort(s=>s.ausgabenTyp);\r\n        \r\n        let groupedData: any = [];\r\n        Rx.Observable.from(this.ausgabenArrayAusgabenTyp)\r\n        .groupBy(x => x.ausgabenTyp) // using groupBy from Rxjs\r\n        .flatMap(group => group.toArray())// GroupBy dont create a array object so you have to flat it\r\n        .map(g => {// mapping \r\n          return {\r\n            ausgabenTyp: g[0].ausgabenTyp,//take the first name because we grouped them by name\r\n            betrag: _.sumBy(g, 'betrag'), // using lodash to sum quantity\r\n          }\r\n        })\r\n        .toArray() //.toArray because I guess you want to loop on it with ngFor      \r\n        .do(sum => console.log('sum AusgabenTypen:', sum)) // just for debug\r\n        .subscribe(d => groupedData = d.sort(s=>s.ausgabenTyp)); \r\n        \r\n        // Syntaktische korrekte Lösung zum Sotrieren der gruppierten Gruppierungsdaten:\r\n        href:https://flaviocopes.com/how-to-sort-array-of-objects-by-property-javascript/\r\n        groupedData= groupedData.sort((a, b) => (a.ausgabenTyp > b.ausgabenTyp) ? 1 : -1);\r\n      //   console.log('alle erfassten Ausgaben:');\r\n      //   console.log(groupedData);\r\n      // console.log(this.allAusgabenTypen);\r\n        let groupedDataErgaenzt=[];\r\n      \r\n        for(var ausgabenTyp:number = 1; ausgabenTyp<=this.baseComponent.ausgabenTypenNames.length; ausgabenTyp++){\r\n          var found=groupedData.find(f=>f.ausgabenTyp===ausgabenTyp);\r\n          if(!found){\r\n            groupedDataErgaenzt.push({betrag:0, ausgabenTyp: ausgabenTyp});\r\n          }\r\n          else{\r\n            groupedDataErgaenzt.push({betrag:found.betrag, ausgabenTyp: found.ausgabenTyp});\r\n          }\r\n        \r\n      }\r\n\r\n      this.resourcesLoaded=true;\r\n      this.betraege = groupedDataErgaenzt.map(b=>b.betrag.toFixed(2));\r\n      // console.log('sortedArray:');\r\n      // console.log(groupedDataErgaenzt);\r\n      // console.log('betr: Typen');\r\n      // console.log(this.betraege);\r\n\r\n      this.chartDataPerAusgabenTyp.backgroundColor=this.baseComponent.ausgabenTypColors;\r\n      this.chartDataPerAusgabenTyp.data=this.betraege;\r\n      this.chartDataPerAusgabenTyp.labels=this.baseComponent.ausgabenTypenNames;\r\n      if(this.pieChartRatioAusgabenTyp){\r\n        //  console.log(this.pieChartRatioUsers.canvas.getContext('2d'));\r\n            console.log('destroy pieChartRatioAusgabenTyp');\r\n            this.pieChartRatioAusgabenTyp.destroy();\r\n        }\r\n        this.pieChartRatioAusgabenTyp = new Chart(this.chartRefPerAusgabenTyp.nativeElement,{\r\n          type: 'pie',\r\n          data: {\r\n            labels:this.chartDataPerAusgabenTyp.labels,\r\n            datasets:[this.chartDataPerAusgabenTyp],\r\n            \r\n          },\r\n          options: {\r\n            title: {\r\n              display: true,\r\n              text: 'Anteile pro Ausgabentyp'\r\n            },\r\n          legend: {\r\n              display: true,\r\n              position: 'top',\r\n              labels: {\r\n                boxWidth: 80,\r\n                fontColor: 'black'\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  getYearUpdate(selected: number){\r\n    this.isRefreshMode=false;\r\n    console.log('kreisdiags: gewähltes Jahr:' + selected);\r\n    this.selYear=selected;\r\n    this.refreshResults(selected, this.selMonth);\r\n  }\r\n\r\n  getMonthUpdate(selected: number){\r\n    this.isRefreshMode=false;\r\n    console.log('kreisdiags: gewählter Monat:' + selected);\r\n    this.selMonth=selected;\r\n    this.refreshResults(this.selYear, this.selMonth);\r\n  }\r\n\r\n  refreshResults(selectedYear?:number, selectedMonth?:number) {\r\n    console.log('kreisdiags: refreshResults');\r\n    this.baseComponent.selectedYear = selectedYear;\r\n    this.baseComponent.selectedMonth = selectedMonth;\r\n   \r\n    this.selYearChanged.emit(selectedYear);\r\n    this.selMonthChanged.emit(selectedMonth);\r\n    this.isRefreshMode=true;\r\n  }\r\n\r\n  refreshChart(chart:Chart){\r\n    chart.canvas.hidden=true;\r\n    setTimeout(()=>{\r\n      chart.canvas.hidden=false;\r\n      chart.update();\r\n    \r\n    },1);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"ausgaben-main-container\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <!-- <div class=\\\"col-md-3\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-label>Jahr</mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"selectedYear\\\" [(value)]=\\\"selectedYear\\\" (selectionChange)=\\\"refreshResults()\\\" matTooltip=\\\"Jahr auswählen\\\">\\r\\n            <mat-option *ngFor=\\\"let year of yearList\\\" [value]=\\\"year\\\">\\r\\n              {{year}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-label>Monat</mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"selectedMonth\\\" [(value)]=\\\"selectedMonth\\\" (selectionChange)=\\\"refreshResults()\\\" matTooltip=\\\"Monat auswählen\\\">\\r\\n            <mat-option *ngFor=\\\"let month of monthList\\\" [value]=\\\"month.Value\\\">\\r\\n              {{month.Text}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div> -->\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <app-month-picker  [selYear]=\\\"selYear\\\" [selMonth]=\\\"selMonth\\\" (selYearChanged)=\\\"getYearUpdate($event)\\\" (selMonthChanged)=\\\"getMonthUpdate($event)\\\" ></app-month-picker>\\r\\n    </div>\\r\\n  </div>\\r\\n  <hr>\\r\\n  <mat-card *ngIf=\\\"!resourcesLoaded\\\" \\r\\n   style=\\\"display: flex; justify-content: center; align-items: center\\\">\\r\\n  <mat-progress-spinner \\r\\n    color=\\\"primary\\\" \\r\\n    mode=\\\"indeterminate\\\">\\r\\n  </mat-progress-spinner>\\r\\n  </mat-card>\\r\\n  <!-- wichtig:\\r\\n    - div um canvas\\r\\n    - kein *ngIf zum Rendern des Charts: Chart muss ausgeführt werden, ansonsten wird Chart gebrochen, falls kein \\r\\n    existBetraege. Daher ngClass\\r\\n  -->\\r\\n  <div [ngClass]=\\\"existBetraege?'showBarChart':'hidden'\\\" >\\r\\n    <canvas #barChart style=\\\"width:100%; height:100%;\\\">{{barChart}}</canvas>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"!existBetraege\\\">\\r\\n    <span >keine Ausgaben im {{monthName}} {{selYear}} erfasst</span>\\r\\n  </div>\\r\\n\\r\\n  \\r\\n\\r\\n\"","import { Component, OnInit, ViewChild, Input, OnChanges, Output, EventEmitter } from '@angular/core';\r\nimport { AusgabenService } from 'src/app/shared/ausgaben.service';\r\nimport {Chart} from 'chart.js';\r\nimport * as _ from 'lodash';\r\nimport {AppComponent} from  'src/app/app.component';\r\nimport {ChartColorsUser} from 'src/app/shared/enums/chart-colors-user.enum';\r\nimport {ChartColorsShops} from 'src/app/shared/enums/chart-colors.shop.enum';\r\nimport { AusgabenListComponent } from 'src/app/ausgaben/ausgaben-list/ausgaben-list.component';\r\nimport { BetragsSet } from 'src/app/shared/interfaces/betrags-set';\r\n\r\n\r\ninterface ChartDataSets{\r\n  label: string,\r\n  data: number[],\r\n  fill: boolean,\r\n  backgroundColor: string\r\n\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-ausgaben-auswertungen',\r\n  templateUrl: './ausgaben-auswertungen.component.html',\r\n  styles: []\r\n})\r\n\r\nexport class AusgabenAuswertungenComponent implements OnInit, OnChanges {\r\n  ausgabenArray: BetragsSet[];\r\n  monthName:string;\r\n  monatsTage:string[];\r\n  betraege:Array<Array<number>>;\r\n  GroupedBetraege=[]; //TODO: bisher keine Gruppierung\r\n  existBetraege: boolean = true;\r\n  resourcesLoaded=false;\r\n  isRefreshMode=false;\r\n  \r\n \r\n  @Input() selMonth: number; \r\n  @Input() selYear: number; \r\n  @Input() ausgabenListComponent: AusgabenListComponent;\r\n  @Output() selYearChanged =  new EventEmitter<number>();\r\n  @Output() selMonthChanged = new EventEmitter<number>();\r\n\r\n  \r\n  @ViewChild('barChart') private chartRef;\r\n\r\n  \r\n  barChart : Chart;\r\n  \r\n  chartDataSets: ChartDataSets[];\r\n \r\n  // chartOptions = {\r\n  //   legend: {\r\n  //     display: true,\r\n  //     position: 'top',\r\n  //     labels: {\r\n  //       boxWidth: 80,\r\n  //       fontColor: 'black'\r\n  //     }\r\n  //   }\r\n  // };\r\n  \r\n  yearList = this.service.getYearList();\r\n  monthList = this.service.getMonthList();\r\n \r\n  constructor(private service: AusgabenService, \r\n              private baseComponent:AppComponent) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('Auswertungen: ngOnInit:' + this.baseComponent.selectedYear + ' ' + this.baseComponent.selectedMonth );\r\n    // this.selectedYear = this.baseComponent.selectedYear; \r\n    // this.selectedMonth = this.baseComponent.selectedMonth;\r\n  }\r\n\r\n  ngOnChanges(){\r\n    this.resourcesLoaded=false;\r\n    this.betraege=[];\r\n    this.monthName=this.service.getMonthName(this.selMonth);\r\n    console.log('Auswertungen: ngOnChanges:' + this.monthName);\r\n    this.getChartData();\r\n  }\r\n\r\n  getChartData(){\r\n    this.chartDataSets=[];\r\n    this.ausgabenArray=[];\r\n    this.baseComponent.allAusgaben.subscribe(\r\n      data => {\r\n        data.forEach(b=>{\r\n          let monatsTag=('00' + new Date(b.Datum).getDate()).slice(-2);\r\n          this.ausgabenArray.push({tag:monatsTag, betrag:b.Betrag, einkaeuferId:b.UserId, ausgabenTyp:''})\r\n        });\r\n        \r\n        for(let day=1; day<=this.service.getDaysInMonth(this.selMonth,this.selYear); day++){\r\n          if(!this.ausgabenArray.find(d=>d.tag === this.baseComponent.pad(day,2))){\r\n              this.ausgabenArray.push({tag:this.baseComponent.pad(day,2), betrag:0,  einkaeuferId:0,  ausgabenTyp:''});\r\n          }\r\n        };\r\n  \r\n        this.ausgabenArray= this.ausgabenArray.sort((a,b)=>{\r\n            if (a.tag < b.tag) return -1;\r\n            if (a.tag > b.tag) return 1;\r\n            return 0;\r\n        });\r\n          \r\n        console.log('AusgabenArray:');\r\n        console.log(this.ausgabenArray);\r\n        let colorIndex = 0;\r\n        this.baseComponent.allUsers.forEach(u=>{\r\n          // console.log(this.chartDataSets);\r\n          this.chartDataSets.push({label:u.Name, data:[], fill:false, backgroundColor:ChartColorsUser[colorIndex]} );\r\n          colorIndex++;\r\n          let betraege=[];\r\n          this.ausgabenArray.map(a=>{\r\n            let b=0;\r\n            if(a.einkaeuferId===u.UserId){\r\n              b=a.betrag;\r\n            }\r\n  \r\n            betraege.push(b);\r\n          });\r\n          \r\n          this.betraege.push(betraege);\r\n        });\r\n\r\n        this.monatsTage = this.ausgabenArray.map(({ tag }) => tag);\r\n        this.existBetraege=false;\r\n        let chartDataIndex=0;\r\n        var positiveBetraege=0;\r\n        this.chartDataSets.forEach(c=>{\r\n          let betraegePerChartData = this.betraege[chartDataIndex];\r\n          c.label=this.baseComponent.userNames[chartDataIndex];\r\n          c.data=betraegePerChartData;\r\n          \r\n          positiveBetraege =  c.data.find(b=>b>0);\r\n          if(positiveBetraege>0){\r\n            console.log('positiveBetraegePos  (barChart)');\r\n            console.log(positiveBetraege);\r\n            this.existBetraege=true;\r\n          }\r\n          \r\n          chartDataIndex++;\r\n        });\r\n  \r\n        this.resourcesLoaded=true;\r\n        // console.log('ChartData');\r\n        // console.log(this.chartDataSets);\r\n      \r\n        // console.log('existBetraege?');\r\n        // console.log(this.existBetraege); \r\n        this.barChart = new Chart(this.chartRef.nativeElement,{\r\n          type: 'bar',\r\n          data: {\r\n            labels: this.monatsTage,\r\n            datasets: this.chartDataSets\r\n          },\r\n          options: {\r\n              legend: {\r\n              display: true\r\n              },\r\n              scales: {\r\n                xAxes: [{\r\n                  display: true,\r\n                  ticks: {\r\n                    beginAtZero: false\r\n                  }\r\n                }],\r\n                yAxes: [{\r\n                  display: true,\r\n                  ticks: {\r\n                    beginAtZero: true\r\n                  }\r\n                }  ]\r\n              }\r\n            }\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  getYearUpdate(selected: number){\r\n    console.log('Auswertungen: gewähltes Jahr:' + selected);\r\n    this.selYear=selected;\r\n    this.refreshResults(selected, this.selMonth);\r\n  }\r\n\r\n  getMonthUpdate(selected: number){\r\n    console.log('Auswertungen: gewählter Monat:' + selected);\r\n   this.selMonth=selected;\r\n   this.refreshResults(this.selYear, this.selMonth);\r\n  }\r\n  refreshResults(selectedYear?:number, selectedMonth?:number) {\r\n    console.log('auswertungen: refreshResults');\r\n    this.baseComponent.selectedYear = selectedYear;\r\n    this.baseComponent.selectedMonth = selectedMonth;\r\n   \r\n    this.selYearChanged.emit(selectedYear);\r\n    this.selMonthChanged.emit(selectedMonth);\r\n  }\r\n}\r\n","module.exports = \"<form name='#ausgabenInputForm' class=\\\"ausgaben-input-container\\\" [formGroup]=\\\"ausgabenInputForm\\\" (ngSubmit)=\\\"onFormSubmit(ausgabenInputForm.value)\\\">\\r\\n  <mat-card>  \\r\\n      <mat-card-title>Ausgabe erfassen/ bearbeiten</mat-card-title>\\r\\n      <mat-card-content>  \\r\\n         <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-5\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <mat-form-field>\\r\\n                <mat-label>Ausgabentyp</mat-label>\\r\\n                <mat-select class=\\\"cell-row\\\" [(ngModel)]=\\\"defaultAusgabenTyp\\\" matTooltip=\\\"Ausgabentyp auswählen\\\" formControlName=\\\"AusgabenTypId\\\">\\r\\n                  <mat-option *ngFor=\\\"let ausgabentyp of ausgabenTypen\\\" [value]=\\\"ausgabentyp.AusgabenTypId\\\">\\r\\n                    {{ausgabentyp.Name}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <mat-form-field >\\r\\n                <input  class=\\\"cell-row\\\"  formControlName=\\\"Betrag\\\" type=\\\"number\\\" step=\\\"0.01\\\" matTooltip=\\\"Betrag in EUR\\\" matInput placeholder=\\\"Betrag\\\">  \\r\\n              </mat-form-field>  \\r\\n              <mat-error>  \\r\\n                <span *ngIf=\\\"!ausgabenInputForm.get('Betrag').value && ausgabenInputForm.get('Betrag').touched\\\"></span>  \\r\\n              </mat-error>  \\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <mat-form-field>\\r\\n                <mat-label>Einkäufer</mat-label>\\r\\n                <mat-select class=\\\"cell-row\\\" [(ngModel)]=\\\"defaultUser\\\" matTooltip=\\\"Einkäufer auswählen\\\" formControlName=\\\"UserId\\\">\\r\\n                  <mat-option *ngFor=\\\"let user of users\\\" [value]=\\\"user.UserId\\\">\\r\\n                    {{user.Name}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n           </div>\\r\\n          </div>\\r\\n        \\r\\n          <div class=\\\"col-md-1\\\"></div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <mat-form-field class=\\\"cell-row\\\">  \\r\\n                    <input  class=\\\"cell-row\\\" formControlName=\\\"Datum\\\"  (dateChange)=\\\"onDateChanged()\\\" matTooltip=\\\"Datum\\\" matInput  [matDatepicker]=\\\"picker\\\" placeholder=\\\"Datum\\\">  \\r\\n                    <mat-datepicker-toggle  class=\\\"cell-row\\\" matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>  \\r\\n                      <mat-datepicker #picker class=\\\"cell-row\\\" [startAt]=\\\"currentDate\\\"></mat-datepicker> \\r\\n                </mat-form-field>  \\r\\n                <mat-error>  \\r\\n                  <span *ngIf=\\\"!ausgabenInputForm.get('Datum').value && ausgabenInputForm.get('Datum').touched\\\"></span>  \\r\\n                </mat-error>  \\r\\n            </div>   \\r\\n            <div class=\\\"form-group\\\">\\r\\n              <mat-form-field>\\r\\n                <mat-label>Geschäft</mat-label>\\r\\n                <mat-select class=\\\"cell-row\\\" [(ngModel)]=\\\"defaultShop\\\" matTooltip=\\\"Geschäft auswählen\\\" formControlName=\\\"ShopId\\\">\\r\\n                  <mat-option *ngFor=\\\"let shop of shops\\\" [value]=\\\"shop.ShopId\\\"> \\r\\n                    <!-- //   | async -->\\r\\n                    {{shop.Name}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div> \\r\\n            <div class=\\\"form-group\\\">\\r\\n              <mat-form-field >  \\r\\n                  <input  class=\\\"cell-row\\\" formControlName=\\\"Bemerkung\\\"  matTooltip=\\\"Bemerkung\\\" matInput placeholder=\\\"Bemerkung\\\">  \\r\\n              </mat-form-field>  \\r\\n            </div>                                 \\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <button type=\\\"submit\\\" mat-raised-button color=\\\"accent\\\"matTooltip=\\\"Speichern\\\"[disabled]=\\\"!ausgabenInputForm.valid\\\"> Speichern</button>      \\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\">          \\r\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"accent\\\" matTooltip=\\\"Eingaben zurücksetzen\\\" (click)=\\\"resetForm(ausgabenInputForm)\\\"> Zurücksetzen</button>  \\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <p *ngIf=\\\"dataSaved\\\" style=\\\"color:rgb(0, 128, 0);font-size:12px;\\\" Class=\\\"success\\\" align=\\\"left\\\">  \\r\\n                {{message}}  \\r\\n            </p>  \\r\\n          </div>\\r\\n        </div>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n</form>\"","import { Component, Input, OnInit, OnChanges } from '@angular/core';\r\nimport { AusgabenService } from 'src/app/shared/ausgaben.service';\r\nimport { FormBuilder, Validators, NgForm } from '@angular/forms';\r\nimport { Ausgaben } from 'src/app/shared/ausgaben.model';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { AusgabenListComponent } from '../ausgaben-list/ausgaben-list.component';\r\nimport { AusgabenTypSet } from 'src/app/shared/interfaces/ausgabentyp-set';\r\nimport { UserSet } from 'src/app/shared/interfaces/user-set';\r\nimport { ShopSet } from 'src/app/shared/interfaces/shop-set';\r\n\r\n\r\n@Component({\r\n  selector: 'app-ausgaben-input',\r\n  templateUrl: './ausgaben-input.component.html',\r\n  styles: []\r\n})\r\nexport class AusgabenInputComponent implements OnInit, OnChanges {\r\n \r\n  // receives events from AusgabenListComponent\r\n  @Input() ausgabeEdit: Ausgaben; \r\n  @Input() ausgabenListComponent: AusgabenListComponent;\r\n  dateChanged: boolean;\r\n\r\n  constructor(private formbuider: FormBuilder,\r\n    private service: AusgabenService, \r\n    private appComponent: AppComponent) {\r\n  \r\n   }\r\n\r\n  ausgabenInputForm: any;\r\n  ausgabenTypen: AusgabenTypSet[];\r\n  users: UserSet[];\r\n  shops: ShopSet[];\r\n\r\n  // Standard values for base data in dropdowns\r\n  defaultAusgabenTyp=1;\r\n  defaultUser=1;\r\n  defaultShop=1;\r\n\r\n\r\n  currentDate:Date; // Festlegung Calendar auf aktuelles Datum\r\n  message:string;\r\n  \r\n  ngOnInit() {\r\n    // Initialisieren der Eingabefelder\r\n   \r\n    console.log('input:ngOnInit');\r\n    this.currentDate=new Date(); \r\n    console.log('currentDate (ngOnInit):');\r\n    console.log(this.currentDate);\r\n    this.ausgabenTypen=this.appComponent.allAusgabenTypen;\r\n    this.users=this.appComponent.allUsers;\r\n    this.shops=this.appComponent.allShops;\r\n    this.ausgabenInputForm=this.formbuider.group({\r\n      Id: ['0'],\r\n      AusgabenTypId:[this.defaultAusgabenTyp, [Validators.required]],\r\n      UserId:[this.defaultUser, [Validators.required]],\r\n      ShopId:[this.defaultShop, [Validators.required]],\r\n      Datum:[this.currentDate, [Validators.required]],\r\n      Betrag:['', [Validators.required]],\r\n      Bemerkung:['']\r\n    })\r\n  }\r\n\r\n  // occurs, when table entry in ausgabeList has been clicked\r\n  ngOnChanges() {\r\n    console.log('input:ngOnChanges');\r\n    if(this.ausgabeEdit){\r\n        // Übernahme der ausgewählten Ausgabe in die Eingabefelder\r\n        this.ausgabenInputForm=this.formbuider.group({\r\n        Id: [this.ausgabeEdit.Id],\r\n        AusgabenTypId:[this.ausgabeEdit.AusgabenTypId, [Validators.required]],\r\n        UserId:[this.ausgabeEdit.UserId, [Validators.required]],\r\n        ShopId:[this.ausgabeEdit.ShopId, [Validators.required]],\r\n        Datum:[this.ausgabeEdit.Datum, [Validators.required]],\r\n        Betrag:[this.ausgabeEdit.Betrag.toFixed(2), [Validators.required]],\r\n        Bemerkung:[this.ausgabeEdit.Bemerkung]\r\n      })\r\n    }\r\n  }\r\n\r\n  onFormSubmit() {  \r\n    const ausgaben = this.ausgabenInputForm.value;  \r\n    console.log(ausgaben);\r\n    if(this.dateChanged){\r\n      \r\n      let ausgabenDatum = ausgaben.Datum;\r\n      ausgabenDatum.setDate(ausgabenDatum.getDate() + 1);\r\n      ausgaben.Datum = ausgabenDatum;\r\n    }\r\n\r\n    if(ausgaben.Id=='0'){\r\n      this.addAusgabenEntry(ausgaben); \r\n     }\r\n    else{\r\n      this.updateAusgabenEntry(ausgaben);\r\n    }\r\n   \r\n    this.resetForm(this.ausgabenInputForm); \r\n  }  \r\n\r\n\r\n  onDateChanged(): void {\r\n      this.dateChanged=true;\r\n  }\r\n\r\n  resetForm(form?: NgForm) { \r\n    console.log('resetForm');\r\n    console.log('defaultAusgabenTyp:' + this.defaultAusgabenTyp);\r\n\r\n    // TODO: reinitialiszation possibly not necessary (ngModel depraceted seeHref:https://angular.io/api/forms/FormControlName#use-with-ngmodel)\r\n    this.defaultAusgabenTyp=1; \r\n    this.defaultUser=1;\r\n    this.defaultShop=1;\r\n    if(form!=null){\r\n      this.currentDate=new Date(); //TODO: warum hat sich der Wert auf Date()-1 geändert?\r\n      console.log('currentDate (ResetForm):');\r\n      console.log(this.currentDate);\r\n      form.reset({Id:'0', AusgabenTypId:this.defaultAusgabenTyp, Datum:this.currentDate, UserId: this.defaultUser, ShopId: this.defaultShop});\r\n    }\r\n    else{\r\n      this.ausgabenInputForm.reset({AusgabenTypId:this.defaultAusgabenTyp});\r\n    }\r\n  \r\n    this.message = null;  \r\n  } \r\n  \r\n  addAusgabenEntry(ausgaben: Ausgaben){\r\n    if(!this.dateChanged){\r\n     ausgaben.Datum.setDate(ausgaben.Datum.getDate()-1); // Antwort: Referenz auf currentDate()?\r\n    }\r\n   \r\n    this.service.addNewAusgabe(ausgaben).subscribe(  \r\n        () => {  \r\n          this.message = 'Ausgabe erfolgreich erfasst.';  \r\n          this.ausgabenListComponent.refreshResults();\r\n          this.dateChanged=false;\r\n          console.log(this.message);\r\n        } \r\n    ) \r\n  }\r\n\r\n  updateAusgabenEntry(ausgaben: Ausgaben){\r\n    this.service.updateAusgabe(ausgaben).subscribe(  \r\n      () => {  \r\n        this.message = 'Ausgabe erfolgreich geändert.';  \r\n        this.ausgabenListComponent.refreshResults();\r\n        console.log(this.message);\r\n      } \r\n    ) \r\n  }\r\n}\r\n","module.exports = \"<div>\\r\\n  <mat-card *ngIf=\\\"!resourcesLoaded\\\" style=\\\"display: flex; justify-content: center; align-items: center\\\">\\r\\n <mat-progress-spinner \\r\\n   color=\\\"primary\\\" \\r\\n   mode=\\\"indeterminate\\\">\\r\\n </mat-progress-spinner>\\r\\n </mat-card>\\r\\n  <mat-card style=\\\"min-width:800px\\\">  \\r\\n    <mat-card-title>Ausgabenübersicht</mat-card-title>\\r\\n    <mat-card-content> \\r\\n      <div class=\\\"row\\\"  *ngIf=\\\"resourcesLoaded\\\" >\\r\\n        <!-- <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <mat-form-field>\\r\\n              <mat-label>Jahr</mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"selectedYear\\\" [(value)]=\\\"selectedYear\\\" (selectionChange)=\\\"refreshResults()\\\" matTooltip=\\\"Jahr auswählen\\\">\\r\\n                <mat-option *ngFor=\\\"let year of yearList\\\" [value]=\\\"year\\\">\\r\\n                  {{year}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <mat-form-field>\\r\\n              <mat-label>Monat</mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"selectedMonth\\\" [(value)]=\\\"selectedMonth\\\" (selectionChange)=\\\"refreshResults()\\\" matTooltip=\\\"Monat auswählen\\\">\\r\\n                <mat-option *ngFor=\\\"let month of monthList\\\" [value]=\\\"month.Value\\\">\\r\\n                  {{month.Text}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div> -->\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <app-month-picker  [selYear]=\\\"selYear\\\" [selMonth]=\\\"selMonth\\\" (selYearChanged)=\\\"getYearUpdate($event)\\\" (selMonthChanged)=\\\"getMonthUpdate($event)\\\" ></app-month-picker>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n          <div class=\\\"form-group\\\">                  \\r\\n            <mat-form-field>\\r\\n              <input (keyup)=\\\"applyFilter($event.target.value)\\\" matInput placeholder=\\\"Filter\\\">\\r\\n            </mat-form-field>\\r\\n          </div> \\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"mat-elevation-z8\\\">\\r\\n        <mat-table *ngIf=\\\"resourcesLoaded\\\" [dataSource]=\\\"dataSource\\\"  matSort >\\r\\n          <ng-container matColumnDef=\\\"AusgabenTyp\\\">\\r\\n            <mat-header-cell class=\\\"header-row\\\" *matHeaderCellDef mat-sort-header> Ausgabentyp </mat-header-cell>\\r\\n            <mat-cell class=\\\"cell-row\\\" *matCellDef=\\\"let ausgabe\\\" (click)='loadAusgabeToEdit(ausgabe)'> {{ausgabe.AusgabenTyp}} </mat-cell>\\r\\n            <td mat-footer-cell *matFooterCellDef> Gesamtausgaben </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"Betrag\\\">\\r\\n            <mat-header-cell class=\\\"header-row\\\" *matHeaderCellDef mat-sort-header> Betrag </mat-header-cell>\\r\\n            <mat-cell class=\\\"cell-row\\\"  *matCellDef=\\\"let ausgabe\\\" (click)='loadAusgabeToEdit(ausgabe)'> {{ausgabe.Betrag | currency:'EUR'}} </mat-cell>\\r\\n            <mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency: 'EUR'}} </mat-footer-cell>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"Datum\\\">\\r\\n            <mat-header-cell class=\\\"header-row\\\" *matHeaderCellDef mat-sort-header>Datum</mat-header-cell>\\r\\n            <mat-cell class=\\\"cell-row\\\" *matCellDef=\\\"let ausgabe\\\"  (click)='loadAusgabeToEdit(ausgabe)'> {{ausgabe.Datum  | date:'dd.MM.yyyy'}} </mat-cell>\\r\\n            <td mat-footer-cell *matFooterCellDef></td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"User\\\">\\r\\n            <mat-header-cell class=\\\"header-row\\\" *matHeaderCellDef mat-sort-header>Einkäufer </mat-header-cell>\\r\\n            <mat-cell  class=\\\"cell-row\\\" *matCellDef=\\\"let ausgabe\\\" (click)='loadAusgabeToEdit(ausgabe)'> {{ausgabe.User}} </mat-cell>\\r\\n            <td mat-footer-cell *matFooterCellDef></td>\\r\\n          </ng-container>     \\r\\n          <ng-container matColumnDef=\\\"Shop\\\">\\r\\n            <mat-header-cell class=\\\"header-row\\\" *matHeaderCellDef mat-sort-header>Geschäft </mat-header-cell>\\r\\n            <mat-cell  class=\\\"cell-row\\\" *matCellDef=\\\"let ausgabe\\\" (click)='loadAusgabeToEdit(ausgabe)'> {{ausgabe.Shop}} </mat-cell>\\r\\n            <td mat-footer-cell *matFooterCellDef></td>\\r\\n          </ng-container>               \\r\\n          <ng-container matColumnDef=\\\"Bemerkung\\\">\\r\\n            <mat-header-cell class=\\\"header-row\\\" *matHeaderCellDef mat-sort-header style=\\\"width:30%\\\"> Bemerkung </mat-header-cell>\\r\\n            <mat-cell  class=\\\"cell-row\\\" *matCellDef=\\\"let ausgabe\\\" (click)='loadAusgabeToEdit(ausgabe)'> {{ausgabe.Bemerkung}} </mat-cell>\\r\\n            <td mat-footer-cell *matFooterCellDef></td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"Delete\\\">\\r\\n            <mat-header-cell class=\\\"header-row\\\" *matHeaderCellDef  style=\\\"width:10px\\\"> </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let ausgabe\\\" class=\\\"mat-delete\\\">\\r\\n              <i class=\\\"far fa-trash-alt fa-lg text-danger\\\" (click)=\\\"onDelete(ausgabe.Id)\\\"></i>\\r\\n            </mat-cell>\\r\\n            <td mat-footer-cell *matFooterCellDef></td>\\r\\n          </ng-container>\\r\\n          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"  class=\\\"header-row\\\"></mat-header-row>\\r\\n          <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n          <mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\" class=\\\"ausgaben-list-footer\\\"></mat-footer-row>\\r\\n        </mat-table>\\r\\n      </div>\\r\\n      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n</div>\"","import { Component, EventEmitter, OnInit, Output, ViewChild, Input, OnChanges } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AusgabenService } from 'src/app/shared/ausgaben.service';\r\nimport {AppComponent} from 'src/app/app.component'; \r\nimport { MatTableDataSource, MatSort, MatPaginator, MatTable } from '@angular/material';\r\nimport 'rxjs/add/observable/of';\r\nimport { Ausgaben } from 'src/app/shared/ausgaben.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-ausgabenlist',\r\n  templateUrl: './ausgaben-list.component.html',\r\n  styles: []\r\n})\r\n\r\nexport class AusgabenListComponent implements OnInit{\r\n \r\n  dataSource = new MatTableDataSource<Ausgaben>();\r\n  @ViewChild(MatTable) table: MatTable<any>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  \r\n  displayedColumns = ['AusgabenTyp', 'Betrag', 'Datum', 'User', 'Shop', 'Bemerkung','Delete'];\r\n  \r\n  // sends the marked list entry to the parent\r\n  @Output() ausgabeEdit = new EventEmitter<Ausgaben>();\r\n  @Output() selYearChanged = new EventEmitter<number>();\r\n  @Output() selMonthChanged = new EventEmitter<number>();\r\n  @Input() selYear: number;\r\n  @Input() selMonth: number;\r\n  \r\n  message: string;\r\n  ausgabeTypName: string;\r\n  resourcesLoaded=false;\r\n\r\n  constructor(private http: HttpClient, \r\n    private service: AusgabenService,\r\n    private baseComponent: AppComponent\r\n  \r\n   ) { }\r\n\r\n  ngOnInit() {\r\n    console.log('list: ngOnOnit'); \r\n    if(!this.selYear){\r\n      this.selYear=this.baseComponent.selectedYear;\r\n      this.selMonth=this.baseComponent.selectedMonth;\r\n    }    \r\n   \r\n    this.baseComponent.allAusgaben.subscribe(\r\n      data => {\r\n        this.dataSource.data = data;\r\n      }\r\n    );\r\n\r\n    this.dataSource.paginator= this.paginator;\r\n    setTimeout(()=>{\r\n    this.dataSource.sort=this.sort;\r\n    })\r\n    this.resourcesLoaded=true;\r\n  }\r\n\r\n  // ngOnChanges(changes: import(\"@angular/core\").SimpleChanges): void {\r\n  //   throw new Error(\"Method not implemented.\");\r\n  // }\r\n\r\n\r\n  refreshResults(selectedYear?:number, selectedMonth?:number) {\r\n    console.log('list: refreshResults');\r\n   \r\n    if(!selectedYear){\r\n      console.log('kein selectedYear:');\r\n      console.log(this.baseComponent.selectedYear);\r\n      console.log(this.baseComponent.selectedMonth);\r\n      selectedYear=this.baseComponent.selectedYear;\r\n      selectedMonth=this.baseComponent.selectedMonth;\r\n    }\r\n    else{\r\n      this.baseComponent.selectedYear = selectedYear;\r\n      this.baseComponent.selectedMonth = selectedMonth;\r\n    }\r\n\r\n    console.log(selectedYear);\r\n    console.log(selectedMonth);\r\n    this.service.getAllAusgaben(selectedYear,selectedMonth).subscribe(\r\n      data => {\r\n        this.dataSource.data = data;\r\n      }\r\n    );\r\n  \r\n    this.selYearChanged.emit(selectedYear);\r\n    this.selMonthChanged.emit(selectedMonth);\r\n    this.resourcesLoaded=true;\r\n  }\r\n\r\n  // Filter: event keyup (Eingabe in Filter)\r\n  applyFilter(filterValue: string){\r\n    this.dataSource.filter=filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  // Summenzeile: mat-footer-cell\r\n  getTotalCost() {\r\n    return this.dataSource.filteredData.map(d=>d.Betrag).reduce((acc, value) => acc + value, 0);\r\n  }\r\n\r\n  // Aufruf, wenn Zeile in Aufgabenliste ausgewählt\r\n  loadAusgabeToEdit(ausgabe: Ausgaben) { \r\n    console.log('ausgewählt:'+ ausgabe.Id); \r\n    this.service.getAusgabeById(ausgabe.Id).subscribe(ausgabe=> {  \r\n      this.message = null;  \r\n      this.ausgabeEdit.emit(ausgabe);  \r\n      \r\n    });  \r\n  }\r\n\r\n  onDelete(Id){\r\n    if(confirm('Eintrag löschen?')){\r\n      this.resourcesLoaded=false;\r\n    this.service.deleteAusgabe(Id)\r\n       .subscribe(res =>{\r\n        console.log('list: ngOnDelete');\r\n        this.baseComponent.allAusgaben.subscribe(\r\n          data => {\r\n            this.dataSource.data=data;\r\n            this.resourcesLoaded=true;\r\n           \r\n          }\r\n        );},\r\n        //this.toastr.warning('Deleted successfully', 'Payment Detail Register');},\r\n         err =>{\r\n           console.log(err);\r\n         }\r\n      );\r\n    }\r\n  }\r\n\r\n  getYearUpdate(selected: number){\r\n    console.log('gewähltes Jahr:' + selected);\r\n   this.selYear=selected;\r\n   this.refreshResults(selected, this.selMonth);\r\n  }\r\n\r\n  getMonthUpdate(selected: number){\r\n    console.log('gewählter Monat:' + selected);\r\n   this.selMonth=selected;\r\n   this.refreshResults(this.selYear, selected);\r\n  }\r\n}\r\n\r\n","module.exports = \"<div class=\\\"ausgaben-main-container\\\">\\r\\n  <!-- <h5 class=\\\"display 4.text-center\\\"> -->\\r\\n    <span style=\\\"font-weight:bold\\\">Erfassung und Übersicht</span> \\r\\n  <!-- </h5> -->\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n       <!-- ausgabenListComponent wird von ausgabenListComponent empfangen.\\r\\n      Hierdurch kann in ausgaben-imput.component die Methode refreshList() aufgerufen werden.\\r\\n     ausgabeEdit enthält die Daten des markierten Datensatzes, die von ausgabenListComponent emittiert wurden. -->\\r\\n      <app-ausgaben-input [ausgabenListComponent]=\\\"ausgabenListComponent\\\" [ausgabeEdit]=\\\"ausgabeEdit\\\">lädt...</app-ausgaben-input>\\r\\n   </div>\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <!-- ausgabenListComponent wird mit  #ausgabenListComponent veröffentlicht -->\\r\\n      <app-ausgabenlist #ausgabenListComponent (ausgabeEdit)=\\\"getAusgabenUpdate($event)\\\" (selYear)=\\\"getYearUpdate($event)\\\" (selMonth)=\\\"getMonthUpdate($event)\\\" >lädt...</app-ausgabenlist> \\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, Output, EventEmitter, Input } from '@angular/core';\r\nimport { Ausgaben } from '../shared/ausgaben.model';\r\nimport { AusgabenService } from '../shared/ausgaben.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Ausgabentyp } from '../shared/ausgabentyp.model';\r\nimport { User } from '../shared/user.model';\r\nimport { Shop } from '../shared/shop.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-ausgaben',\r\n  templateUrl: './ausgaben.component.html',\r\n  styles: []\r\n})\r\n\r\nexport class AusgabenComponent {\r\n \r\n  @Output() selYearChanged = new EventEmitter<number>();\r\n  @Output() selMonthChanged = new EventEmitter<number>();\r\n  @Input() selYear: number;\r\n  @Input() selMonth: number;\r\n  ausgabeEdit: Ausgaben;\r\n  \r\n  \r\n  getAusgabenUpdate(selected: Ausgaben){\r\n    this.ausgabeEdit = selected;\r\n  }\r\n\r\n  getYearUpdate(selected: number){\r\n    console.log('gewähltes Jahr:' + selected);\r\n    this.selYearChanged.emit(selected);\r\n  }\r\n\r\n  getMonthUpdate(selected: number){\r\n    console.log('gewählter Monat:' + selected);\r\n    this.selMonthChanged.emit(selected);\r\n  }\r\n}\r\n\r\n","import { Ausgabentyp } from './ausgabentyp.model';\r\n\r\nexport class Ausgaben {\r\n    Id:string;\r\n    AusgabenTypId:string;\r\n    AusgabenTyp:string;\r\n    UserId:number;\r\n    User:string;\r\n    ShopId: string;\r\n    Shop: string;\r\n    Betrag: number;\r\n    Datum: Date;\r\n    Bemerkung: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';  \r\nimport { HttpHeaders } from '@angular/common/http'; \r\nimport { Observable, pipe } from 'rxjs';  \r\nimport  'rxjs/add/operator/map'; \r\n\r\nimport {Ausgaben} from './ausgaben.model';\r\nimport {Ausgabentyp} from './ausgabentyp.model';\r\nimport { MatTableDataSource } from '@angular/material';\r\nimport { User } from './user.model';\r\nimport { Shop } from './shop.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AusgabenService {\r\n\r\n  // private props\r\n  dataSource = new MatTableDataSource<Ausgaben>();\r\n  httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\r\n // url = 'http://www.it-impact.de/api';\r\n  url = 'http://ausgabenverwaltung/api'; \r\n  \r\n  \r\n  //constructor\r\n  constructor(private http: HttpClient) { }\r\n  \r\n  // methods\r\n  // *** Ausgaben\r\n  getAllAusgaben(year?:number, month?: number): Observable<Ausgaben[]> {  \r\n    return this.http.get<Ausgaben[]>(this.url + '/ausgaben')\r\n    .map(res => {\r\n      res.forEach(r=> {\r\n        this.getAusgabenTypById(r.AusgabenTypId.toString()).subscribe(ausgabeTyp=> {\r\n            r.AusgabenTyp=ausgabeTyp.Name;\r\n          });\r\n          this.getUserById(r.UserId.toString()).subscribe(user=> {\r\n            r.User=user.Name;\r\n          })\r\n          this.getShopById(r.ShopId.toString()).subscribe(shop=> {\r\n          r.Shop=shop.Name;\r\n        })\r\n      });\r\n  \r\n      this.dataSource.data = res;\r\n    \r\n      // gesetzte Jahres- und Monatsfilter anwenden\r\n      console.log(month);\r\n      if(year > 0 && month > 0){\r\n        //console.log(res.filter(r => new Date(r.Datum).getFullYear() === year && new Date(r.Datum).getMonth() === month - 1));\r\n        return res.filter(r => new Date(r.Datum).getFullYear() === year && new Date(r.Datum).getMonth() === month - 1);\r\n      }\r\n      else{\r\n        return res;\r\n      }\r\n\r\n    });\r\n   } \r\n\r\n  getAusgabeById(ausgabenId: string): Observable<Ausgaben> {  \r\n    return this.http.get<Ausgaben>(this.url + '/ausgaben/' + ausgabenId);  \r\n  } \r\n  \r\n  addNewAusgabe(ausgaben: Ausgaben): Observable<Ausgaben> {  \r\n    return this.http.post<Ausgaben>(this.url + '/ausgaben', ausgaben, this.httpOptions);\r\n  } \r\n\r\n  updateAusgabe(ausgaben: Ausgaben): Observable<Ausgaben> {  \r\n    return this.http.put<Ausgaben>(this.url + '/ausgaben/' + ausgaben.Id, ausgaben, this.httpOptions);\r\n  } \r\n  deleteAusgabe(ausgabeId: number) {\r\n    return this.http.delete(this.url + '/ausgaben/' + ausgabeId);\r\n  }\r\n\r\n    // AusgabenTyp\r\n  getAllAusgabenTypen(): Observable<Ausgabentyp[]> {  \r\n      return this.http.get<Ausgabentyp[]>(this.url + '/ausgabentyp');  \r\n  } \r\n\r\n  getAusgabenTypById(id: string): Observable<Ausgabentyp> {  \r\n      return this.http.get<Ausgabentyp>(this.url + '/ausgabentyp/' + id );  \r\n  } \r\n\r\n    // user\r\n  getAllUsers(): Observable<User[]> {  \r\n    return this.http.get<User[]>(this.url + '/user');  \r\n  } \r\n\r\n  getUserById(id: string): Observable<User> {  \r\n    return this.http.get<User>(this.url + '/user/' + id );  \r\n  } \r\n\r\n  //shop\r\n  getAllShops(): Observable<Shop[]> {  \r\n    return this.http.get<Shop[]>(this.url + '/shop');  \r\n  } \r\n\r\n  getShopById(id: string): Observable<Shop> {  \r\n    return this.http.get<Shop>(this.url + '/shop/' + id );  \r\n  } \r\n\r\n  getMonthName(id:number): string{\r\n    console.log( this.getMonthList().find(m=>m.Value===id).Text);\r\n    return  this.getMonthList().find(m=>m.Value===id).Text;\r\n  }\r\n\r\n  // *** Ausgaben \r\n  // *** common\r\n\r\n  getDaysInMonth(month,year) {\r\n    return new Date(year, month, 0).getDate();\r\n   };\r\n \r\n  getYearList(){\r\n    var yearList = [];\r\n    var currentYear= new Date().getFullYear();\r\n    for(let year=currentYear; year>=currentYear-10; year-- ){\r\n      yearList.push(year);\r\n    }\r\n  \r\n    return yearList;\r\n  }\r\n\r\n  // TODO: generische Lösung?\r\n  getMonthList(){\r\n    var monthList = [\r\n    { Value: 0, Text: 'Alle Monate' },\r\n    { Value: 1, Text: 'Januar' },\r\n    { Value: 2, Text: 'Februar' },\r\n    { Value: 3, Text: 'März' },\r\n    { Value: 4, Text: 'April' },\r\n    { Value: 5, Text: 'Mai' },\r\n    { Value: 6, Text: 'Juni' },\r\n    { Value: 7, Text: 'Juli' },\r\n    { Value: 8, Text: 'August' },\r\n    { Value: 9, Text: 'September' },\r\n    { Value: 10, Text: 'Oktober' },\r\n    { Value: 11, Text: 'November' },\r\n    { Value: 12, Text: 'Dezember' }\r\n    ];\r\n\r\n    return monthList;\r\n  }\r\n\r\n// *** common\r\n}\r\n\r\n \r\n","export enum ChartColorsUser {\r\n    \"red\",\r\n     \"green\",\r\n     \"blue\",\r\n    \"yellow\",\r\n  }\r\n  \r\n","export enum ChartColorsShops {\r\n    \"red\",\r\n    \"yellow\",\r\n    \"green\",\r\n    \"blue\",\r\n    \"brown\",\r\n    \"orange\",\r\n    \"pink\"\r\n  }\r\n  \r\n","module.exports = \".month-picker .mat-calendar-period-button {\\r\\n    pointer-events: none;\\r\\n  }\\r\\n  \\r\\n  .month-picker .mat-calendar-arrow {\\r\\n    display: none;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL21vbnRoLXBpY2tlci9tb250aC1waWNrZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG9CQUFvQjtFQUN0Qjs7RUFFQTtJQUNFLGFBQWE7RUFDZiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9tb250aC1waWNrZXIvbW9udGgtcGlja2VyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubW9udGgtcGlja2VyIC5tYXQtY2FsZW5kYXItcGVyaW9kLWJ1dHRvbiB7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICB9XHJcbiAgXHJcbiAgLm1vbnRoLXBpY2tlciAubWF0LWNhbGVuZGFyLWFycm93IHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfSJdfQ== */\"","module.exports = \"<mat-form-field>\\r\\n  <input matInput [matDatepicker]=\\\"dp\\\" placeholder=\\\"Monat auswählen\\\" [formControl]=\\\"selectedDate\\\"\\r\\n  (dateInput)=\\\"addEvent('input', $event)\\\" (dateChange)=\\\"addEvent('change', $event)\\\">\\r\\n  <mat-datepicker-toggle matSuffix [for]=\\\"dp\\\"></mat-datepicker-toggle>\\r\\n  <mat-datepicker #dp\\r\\n                  startView=\\\"multi-year\\\"\\r\\n                  (yearSelected)=\\\"chosenYearHandler($event)\\\"\\r\\n                  (monthSelected)=\\\"chosenMonthHandler($event, dp)\\\"\\r\\n                  panelClass=\\\"month-picker\\\">\\r\\n  </mat-datepicker>\\r\\n</mat-form-field>\"","import {Component, Output, EventEmitter, Input} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS} from '@angular/material-moment-adapter';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\r\nimport {MatDatepicker, MatDatepickerInputEvent} from '@angular/material/datepicker';\r\n\r\n// Depending on whether rollup is used, moment needs to be imported differently.\r\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\r\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\r\n// the `default as` syntax.\r\nimport * as _moment from 'moment';\r\n// tslint:disable-next-line:no-duplicate-imports\r\nimport {default as _rollupMoment, Moment} from 'moment';\r\n\r\nconst moment = _rollupMoment || _moment;\r\n\r\n// See the Moment.js docs for the meaning of these formats:\r\n// https://momentjs.com/docs/#/displaying/format/\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'MM.YYYY',\r\n  },\r\n  display: {\r\n    dateInput: 'MMMM YYYY',\r\n    monthYearLabel: 'MMMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n\r\n/** @title Datepicker emulating a Year and month picker */\r\n@Component({\r\n  selector: 'app-month-picker',\r\n  templateUrl: './month-picker.component.html',\r\n  styleUrls: ['./month-picker.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\r\n    },\r\n\r\n    {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\r\n  ],\r\n})\r\nexport class DatepickerViewsSelection {\r\n\r\n  @Input() selYear=new Date().getFullYear();\r\n  @Input() selMonth=new Date().getMonth();\r\n  @Output() selYearChanged = new EventEmitter<number>();\r\n  @Output() selMonthChanged = new EventEmitter<number>();\r\n\r\n  selectedDate = new FormControl(moment());\r\n  selectedYear: number;\r\n  \r\n  events: string[] = [];\r\n\r\n  ngOnChanges(){\r\n    this.initializeDatePicker();\r\n  }\r\n  \r\n  addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\r\n    this.events.push('${type}: ${event.value}');\r\n  }\r\n  \r\n \r\n  initializeDatePicker(){\r\n    console.log('selYear:');\r\n    console.log(this.selYear);\r\n    console.log('selMonth:');\r\n    console.log(this.selMonth);\r\n    this.selectedDate.setValue(new Date(this.selYear, this.selMonth-1, 1));\r\n  \r\n  }\r\n  chosenYearHandler(normalizedYear: Moment) {\r\n    // console.log('chosenYearHandler');\r\n    // console.log(this.selectedDate.value);\r\n    // console.log(normalizedYear.year());\r\n    this.selectedDate.setValue(new Date(normalizedYear.year(), this.selMonth, 1));\r\n    this.selectedYear=normalizedYear.year();\r\n    this.selYearChanged.emit(normalizedYear.year());\r\n  }\r\n\r\n  chosenMonthHandler(normalizedMonth: Moment, datepicker: MatDatepicker<Moment>) {\r\n    console.log('chosenMonthHandler');\r\n    console.log(normalizedMonth.month());\r\n    this.selectedDate.setValue(new Date(this.selectedYear, normalizedMonth.month(), 1));\r\n    this.selMonthChanged.emit(normalizedMonth.month()+1);\r\n    datepicker.close();\r\n  }\r\n\r\n \r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}